    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; -- BRIEF: Picoblaze code to send two umber to the float point unit,
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; wait the interrupt and read the result.
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;;----------------------------------
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;; ENTER THE NUMBERS IN HEX
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;;----------------------------------
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Number one
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-NA1
   OPERAND2-42
    COMMENT-;  35 decimal  = 42 0C 00 00
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-NA2
   OPERAND2-0C
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-NA3
   OPERAND2-00
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-NA4
   OPERAND2-00
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Number two
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-NB1
   OPERAND2-42
    COMMENT-;   75
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-NB2
   OPERAND2-96
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-NB3
   OPERAND2-00
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-NB4
   OPERAND2-00
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Operation  00 - add  01 --subtract  10 --Multiplication
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-OPE
   OPERAND2-00
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;;----------------------------------
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;; DO NOT NEED CHANGE NOTHING BELOW
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;;----------------------------------
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; START BIT  -- define ON as 1
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-STA_ON
   OPERAND2-01
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-STA_OFF
   OPERAND2-00
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;--- NUMBER OF THE REGISTERS  ---
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;Result
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pR1
   OPERAND2-01
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pR2
   OPERAND2-02
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pR3
   OPERAND2-03
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pR4
   OPERAND2-04
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;first number
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pA1
   OPERAND2-05
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pA2
   OPERAND2-06
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pA3
   OPERAND2-07
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pA4
   OPERAND2-08
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;second number
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pB1
   OPERAND2-09
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pB2
   OPERAND2-0A
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pB3
   OPERAND2-0B
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pB4
   OPERAND2-0C
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;Operation subtract or add
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pOP
   OPERAND2-0D
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-sta
   OPERAND2-0E
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;Result - return the result to simulate
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pRp1
   OPERAND2-0F
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pRp2
   OPERAND2-10
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pRp3
   OPERAND2-11
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-pRp4
   OPERAND2-12
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;--- PROGRAM  ---
    ADDRESS-000
      LABEL-output
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;output the number to the float point unit
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;First number
    ADDRESS-000
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-NA1
    COMMENT-
    ADDRESS-001
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s0
   OPERAND2-pA1
    COMMENT-
    ADDRESS-002
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-NA2
    COMMENT-
    ADDRESS-003
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s0
   OPERAND2-pA2
    COMMENT-
    ADDRESS-004
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-NA3
    COMMENT-
    ADDRESS-005
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s0
   OPERAND2-pA3
    COMMENT-
    ADDRESS-006
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-NA4
    COMMENT-
    ADDRESS-007
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s0
   OPERAND2-pA4
    COMMENT-
    ADDRESS-008
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;Second number
    ADDRESS-008
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-NB1
    COMMENT-
    ADDRESS-009
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s0
   OPERAND2-pB1
    COMMENT-
    ADDRESS-00A
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-NB2
    COMMENT-
    ADDRESS-00B
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s0
   OPERAND2-pB2
    COMMENT-
    ADDRESS-00C
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-NB3
    COMMENT-
    ADDRESS-00D
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s0
   OPERAND2-pB3
    COMMENT-
    ADDRESS-00E
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-NB4
    COMMENT-
    ADDRESS-00F
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s0
   OPERAND2-pB4
    COMMENT-
    ADDRESS-010
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;operation
    ADDRESS-010
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-OPE
    COMMENT-
    ADDRESS-011
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s0
   OPERAND2-pOP
    COMMENT-
    ADDRESS-012
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;Output the start value
    ADDRESS-012
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-STA_ON
    COMMENT-
    ADDRESS-013
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s0
   OPERAND2-sta
    COMMENT-
    ADDRESS-014
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;Enable the interrupt
    ADDRESS-014
      LABEL-
INSTRUCTION-ENABLE
   OPERAND1-INTERRUPT
   OPERAND2-
    COMMENT-
    ADDRESS-015
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;wait the interrupt in a infinete loop
    ADDRESS-015
      LABEL-loop
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-015
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-loop
   OPERAND2-
    COMMENT-
    ADDRESS-016
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;--- INTERRUPT RUTINE  ---
    ADDRESS-016
      LABEL-int_routine
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-016
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;stop -  we have had the result
    ADDRESS-016
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-STA_OFF
    COMMENT-
    ADDRESS-017
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s0
   OPERAND2-sta
    COMMENT-
    ADDRESS-018
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;read the result
    ADDRESS-018
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-s1
   OPERAND2-pR1
    COMMENT-
    ADDRESS-019
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-s2
   OPERAND2-pR2
    COMMENT-
    ADDRESS-01A
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-s3
   OPERAND2-pR3
    COMMENT-
    ADDRESS-01B
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-s4
   OPERAND2-pR4
    COMMENT-
    ADDRESS-01C
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;output the result, only to show in the simulation
    ADDRESS-01C
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s1
   OPERAND2-pRp1
    COMMENT-
    ADDRESS-01D
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s2
   OPERAND2-pRp2
    COMMENT-
    ADDRESS-01E
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s3
   OPERAND2-pRp3
    COMMENT-
    ADDRESS-01F
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s4
   OPERAND2-pRp4
    COMMENT-
    ADDRESS-020
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;return to the interupt
    ADDRESS-020
      LABEL-
INSTRUCTION-RETURNI
   OPERAND1-ENABLE
   OPERAND2-
    COMMENT-
    ADDRESS-021
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-021
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;--- INTERRUPT VECTOR  ---
    ADDRESS-3FF
      LABEL-
INSTRUCTION-ADDRESS
   OPERAND1-3FF
   OPERAND2-
    COMMENT-;set interrupt vector
    ADDRESS-3FF
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-int_routine
   OPERAND2-
    COMMENT-
